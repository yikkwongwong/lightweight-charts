"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[61592],{15680:(e,n,r)=>{r.d(n,{xA:()=>g,yg:()=>d});var a=r(96540);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function l(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?l(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,a,t=function(e,n){if(null==e)return{};var r,a,t={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var p=a.createContext({}),s=function(e){var n=a.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},g=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},y=a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,l=e.originalType,p=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),c=s(r),y=t,d=c["".concat(p,".").concat(y)]||c[y]||u[y]||l;return r?a.createElement(d,i(i({ref:n},g),{},{components:r})):a.createElement(d,i({ref:n},g))}));function d(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var l=r.length,i=new Array(l);i[0]=y;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[c]="string"==typeof e?e:t,i[1]=o;for(var s=2;s<l;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}y.displayName="MDXCreateElement"},4074:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=r(58168),t=(r(96540),r(15680));const l={id:"PriceScaleOptions",title:"Interface: PriceScaleOptions",sidebar_label:"PriceScaleOptions",sidebar_position:0,custom_edit_url:null,pagination_next:null,pagination_prev:null},i=void 0,o={unversionedId:"api/interfaces/PriceScaleOptions",id:"version-3.8/api/interfaces/PriceScaleOptions",title:"Interface: PriceScaleOptions",description:"Structure that describes price scale options",source:"@site/versioned_docs/version-3.8/api/interfaces/PriceScaleOptions.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/PriceScaleOptions",permalink:"/lightweight-charts/docs/3.8/api/interfaces/PriceScaleOptions",draft:!1,editUrl:null,tags:[],version:"3.8",sidebarPosition:0,frontMatter:{id:"PriceScaleOptions",title:"Interface: PriceScaleOptions",sidebar_label:"PriceScaleOptions",sidebar_position:0,custom_edit_url:null,pagination_next:null,pagination_prev:null},sidebar:"apiSidebar"},p={},s=[{value:"Properties",id:"properties",level:2},{value:"autoScale",id:"autoscale",level:3},{value:"mode",id:"mode",level:3},{value:"invertScale",id:"invertscale",level:3},{value:"alignLabels",id:"alignlabels",level:3},{value:"scaleMargins",id:"scalemargins",level:3},{value:"borderVisible",id:"bordervisible",level:3},{value:"borderColor",id:"bordercolor",level:3},{value:"entireTextOnly",id:"entiretextonly",level:3},{value:"visible",id:"visible",level:3},{value:"drawTicks",id:"drawticks",level:3}],g={toc:s},c="wrapper";function u(e){let{components:n,...r}=e;return(0,t.yg)(c,(0,a.A)({},g,r,{components:n,mdxType:"MDXLayout"}),(0,t.yg)("p",null,"Structure that describes price scale options"),(0,t.yg)("h2",{id:"properties"},"Properties"),(0,t.yg)("h3",{id:"autoscale"},"autoScale"),(0,t.yg)("p",null,"\u2022 ",(0,t.yg)("strong",{parentName:"p"},"autoScale"),": ",(0,t.yg)("inlineCode",{parentName:"p"},"boolean")),(0,t.yg)("p",null,"Autoscaling is a feature that automatically adjusts a price scale to fit the visible range of data.\nNote that overlay price scales are always auto-scaled."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},(0,t.yg)("inlineCode",{parentName:"strong"},"Default Value"))),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"true")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"mode"},"mode"),(0,t.yg)("p",null,"\u2022 ",(0,t.yg)("strong",{parentName:"p"},"mode"),": ",(0,t.yg)("a",{parentName:"p",href:"/lightweight-charts/docs/3.8/api/enums/PriceScaleMode"},(0,t.yg)("inlineCode",{parentName:"a"},"PriceScaleMode"))),(0,t.yg)("p",null,"Price scale mode."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},(0,t.yg)("inlineCode",{parentName:"strong"},"Default Value"))),(0,t.yg)("p",null,(0,t.yg)("a",{parentName:"p",href:"/lightweight-charts/docs/3.8/api/enums/PriceScaleMode#normal"},"Normal")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"invertscale"},"invertScale"),(0,t.yg)("p",null,"\u2022 ",(0,t.yg)("strong",{parentName:"p"},"invertScale"),": ",(0,t.yg)("inlineCode",{parentName:"p"},"boolean")),(0,t.yg)("p",null,"Invert the price scale, so that a upwards trend is shown as a downwards trend and vice versa.\nAffects both the price scale and the data on the chart."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},(0,t.yg)("inlineCode",{parentName:"strong"},"Default Value"))),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"false")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"alignlabels"},"alignLabels"),(0,t.yg)("p",null,"\u2022 ",(0,t.yg)("strong",{parentName:"p"},"alignLabels"),": ",(0,t.yg)("inlineCode",{parentName:"p"},"boolean")),(0,t.yg)("p",null,"Align price scale labels to prevent them from overlapping."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},(0,t.yg)("inlineCode",{parentName:"strong"},"Default Value"))),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"true")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"scalemargins"},"scaleMargins"),(0,t.yg)("p",null,"\u2022 ",(0,t.yg)("strong",{parentName:"p"},"scaleMargins"),": ",(0,t.yg)("a",{parentName:"p",href:"/lightweight-charts/docs/3.8/api/interfaces/PriceScaleMargins"},(0,t.yg)("inlineCode",{parentName:"a"},"PriceScaleMargins"))),(0,t.yg)("p",null,"Price scale margins."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},(0,t.yg)("inlineCode",{parentName:"strong"},"Default Value"))),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"{ bottom: 0.1, top: 0.2 }")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},(0,t.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"chart.priceScale('right').applyOptions({\n    scaleMargins: {\n        top: 0.8,\n        bottom: 0,\n    },\n});\n")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"bordervisible"},"borderVisible"),(0,t.yg)("p",null,"\u2022 ",(0,t.yg)("strong",{parentName:"p"},"borderVisible"),": ",(0,t.yg)("inlineCode",{parentName:"p"},"boolean")),(0,t.yg)("p",null,"Set true to draw a border between the price scale and the chart area."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},(0,t.yg)("inlineCode",{parentName:"strong"},"Default Value"))),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"true")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"bordercolor"},"borderColor"),(0,t.yg)("p",null,"\u2022 ",(0,t.yg)("strong",{parentName:"p"},"borderColor"),": ",(0,t.yg)("inlineCode",{parentName:"p"},"string")),(0,t.yg)("p",null,"Price scale border color."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},(0,t.yg)("inlineCode",{parentName:"strong"},"Default Value"))),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"'#2B2B43'")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"entiretextonly"},"entireTextOnly"),(0,t.yg)("p",null,"\u2022 ",(0,t.yg)("strong",{parentName:"p"},"entireTextOnly"),": ",(0,t.yg)("inlineCode",{parentName:"p"},"boolean")),(0,t.yg)("p",null,"Show top and bottom corner labels only if entire text is visible."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},(0,t.yg)("inlineCode",{parentName:"strong"},"Default Value"))),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"false")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"visible"},"visible"),(0,t.yg)("p",null,"\u2022 ",(0,t.yg)("strong",{parentName:"p"},"visible"),": ",(0,t.yg)("inlineCode",{parentName:"p"},"boolean")),(0,t.yg)("p",null,"Indicates if this price scale visible. Ignored by overlay price scales."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},(0,t.yg)("inlineCode",{parentName:"strong"},"Default Value"))),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"true")," for the right price scale and ",(0,t.yg)("inlineCode",{parentName:"p"},"false")," for the left"),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"drawticks"},"drawTicks"),(0,t.yg)("p",null,"\u2022 ",(0,t.yg)("strong",{parentName:"p"},"drawTicks"),": ",(0,t.yg)("inlineCode",{parentName:"p"},"boolean")),(0,t.yg)("p",null,"Draw small horizontal line on price axis labels."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},(0,t.yg)("inlineCode",{parentName:"strong"},"Default Value"))),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"true")))}u.isMDXComponent=!0}}]);